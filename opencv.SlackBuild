#!/bin/sh
#
# Slackware build script for OpenCV
# Copyright (C) 2008-2016 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
# $Id: opencv.SlackBuild,v 1.14 2016/09/23 12:37:11 gsotirov Exp $
#

. ../../slack-package.conf

NAME=OpenCV
PNAME=`echo $NAME | tr "[:upper:]" "[:lower:]"`
VERSION=3.1.0
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${PNAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${PNAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the sources
cd $TMP
unzip $CWD/${PNAME}-${VERSION}.zip || exit 3
cd $SRC
fix_source

# Configure, make & install
# HTML documentation requires Sphinx
mkdir build; cd build
cmake -LAH \
      -DBUILD_DOCS=ON \
      -DBUILD_EXAMPLES=ON \
      -DBUILD_PACKAGE=OFF \
      -DBUILD_SHARED_LIBS=ON \
      -DBUILD_TESTS=ON \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
      -DCMAKE_C_FLAGS="$SLKCFLAGS" \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_LIBRARY_PATH=/usr/lib${LIBDIRSUFFIX} \
      -DCMAKE_VERBOSE_MAKEFILE=TRUE \
      -DENABLE_FAST_MATH=OFF \
      -DENABLE_OMIT_FRAME_POINTER=OFF \
      -DENABLE_PRECOMPILED_HEADERS=ON \
      -DENABLE_SSE=ON \
      -DENABLE_SSE2=ON\
      -DENABLE_SSE3=ON \
      -DENABLE_SSSE3=ON \
      -DENABLE_SSE41=ON \
      -DENABLE_SSE42=ON \
      -DINSTALL_C_EXAMPLES=ON \
      -DINSTALL_PYTHON_EXAMPLES=ON \
      -DOPENCV_DOC_INSTALL_PATH=/usr/doc/${PNAME}-${VERSION} \
      -DWITH_1394=ON \
      -DWITH_EIGEN=ON \
      -DWITH_FFMPEG=ON \
      -DWITH_GDAL=ON \
      -DWITH_GSTREAMER=ON \
      -DWITH_GTK=ON \
      -DWITH_JASPER=ON \
      -DWITH_JPEG=ON \
      -DWITH_LIBV4L=ON \
      -DWITH_OPENCL=ON \
      -DWITH_OPENEXR=ON \
      -DWITH_OPENGL=ON \
      -DWITH_PNG=ON \
      -DWITH_PTHREADS_PF=ON \
      -DWITH_QT=ON \
      -DWITH_TIFF=ON \
      -DWITH_V4L=ON \
      -DWITH_WEBP=ON \
      -DWITH_XINE=ON \
      .. || exit 4

# Build & install
make VERBOSE=1 -j4 || exit 5
make VERBOSE=1 DESTDIR=$PKG install || exit 6
cd ..

# Move documents in the right place
install -d -m 755 $PKG/usr/doc/${PNAME}-${VERSION}/examples
mv $PKG/usr/share/$NAME/samples/* $PKG/usr/doc/${PNAME}-${VERSION}/examples/
rm -rf $PKG/usr/share/$NAME/samples
# CMake doesn't properly install even configured
if [ "${LIBDIRSUFFIX}" != "" ]; then
  mv $PKG/usr/lib $PKG/usr/lib${LIBDIRSUFFIX}
fi

# Preapre
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG ${PNAME}-${VERSION} )
( cd $PKG/usr/doc/${PNAME}-${VERSION}; mv LICENSE COPYING )

install -m 755 -d $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${PNAME}-${VERSION}
install -m 755 -d $SBDIR
install -m 644 $CWD/slack-desc          $SBDIR/slack-desc
install -m 644 $CWD/slack-required      $SBDIR/slack-required
install -m 644 $CWD/${PNAME}.SlackBuild $SBDIR/${PNAME}.SlackBuild

# Assemble
PKGNAME=${PNAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
cd $PKG
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cp $CWD/slack-desc ${PKGNAME}.txt

# Clean up (optionally)
if [ "$1" = "--cleanup" ]; then
  rm -rf $SRC
  rm -rf $PKG
fi

